(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return m}));var o=n(3),a=(n(0),n(108));const i={title:"Appsmith Migrations"},r={unversionedId:"appsmith",id:"appsmith",isDocsHomePage:!1,title:"Appsmith Migrations",description:"Appsmith",source:"@site/docs/appsmith.md",slug:"/appsmith",permalink:"/docs/appsmith",version:"current",sidebar:"docs",previous:{title:"What is chewy.json file in a project",permalink:"/docs/what-is-chewy.json-file"},next:{title:"Keycloak",permalink:"/docs/keycloak"}},p=[{value:"Appsmith",id:"appsmith",children:[]},{value:"Migrations",id:"migrations",children:[]}],s={toc:p};function m({components:e,...t}){return Object(a.b)("wrapper",Object(o.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"appsmith"},"Appsmith"),Object(a.b)("p",null,"Appsmith is a framework to build admin panels, CRUD apps and workflows.\nAppsmith is an open-source tool that is free to use.\nIt can be used to build admin panel where user can access data from multiple sources including databases like MySql , Postgres , Redshift and even APIs.  "),Object(a.b)("h2",{id:"migrations"},"Migrations"),Object(a.b)("p",null,"Appsmith does not provide the functionality to migrate the data and project configuration from one machine to another.\nBut, we can use ",Object(a.b)("inlineCode",{parentName:"p"},"mongodbdump")," to dump data from one project and ",Object(a.b)("inlineCode",{parentName:"p"},"mongorestore")," to the another one.\nThis method does not go well with Appsmith as it looses some information when restoring data to the target machine.\nIt works when we drop the database from the target machine and then restore the database from source machine.\nThis is a risky move, so it is only for the first time we move to the production from development or from one machine to\nthe another.\nAlso, moving dump directory from one project to another is not an appropriate way."),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Note: Documentation will be updated if and when there is a new way to apply safe migrations"),"."),Object(a.b)("p",null,"Following are the steps.\nFirst, dump the database to a folder in a project we will be migrating from.\nTo do so, first create a folder inside data directory in the appsmith project. Update the volumes list\nby adding"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"`- ./data/export:/export\n")),Object(a.b)("p",null,"in ",Object(a.b)("inlineCode",{parentName:"p"},"docker-compose")," file's ",Object(a.b)("inlineCode",{parentName:"p"},"mongo")," service. Restart the container.\nRun ",Object(a.b)("inlineCode",{parentName:"p"},"docker exec -it <container_name_for_mongo> bash")," then run ",Object(a.b)("inlineCode",{parentName:"p"},"mongodump")," command"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},'mongodump --uri "mongodb://<rootUsername>:<rootPassword>@localhost:27017/appsmith" --out=/export/appsmith-mongo-dump\n')),Object(a.b)("p",null,"It will create the dump directory in export directory.\nNow, we will prep the target appsmith project for restoring the data.\nGet into mongo db shell by running\n",Object(a.b)("inlineCode",{parentName:"p"},"docker exec -it <container_name_for_mongo> bash"),"\nand then run the next command to start the process of dropping database ",Object(a.b)("inlineCode",{parentName:"p"},"appsmith"),".  Run ",Object(a.b)("inlineCode",{parentName:"p"},"mongo -u <username>  -p password"),"\nthen see if appsmith is in databases list by running ",Object(a.b)("inlineCode",{parentName:"p"},"show dbs")," and if it is present , run ",Object(a.b)("inlineCode",{parentName:"p"},"use appsmith")," and then ",Object(a.b)("inlineCode",{parentName:"p"},"db.dropDatabase()"),".\nThis will drop the database and now we can start restoring of database. Run the following command after making store that appsmith project has directory with a backed up database."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"mongorestore --drop /export/appsmith-mongo-dump/appsmith -d appsmith --uri=mongodb://<rootUser>:<rootPassword>@localhost/appsmith\n")),Object(a.b)("p",null,"After completing the above steps, replace the content of the file named ",Object(a.b)("inlineCode",{parentName:"p"},"encryption.env")," with the content from the same file in a source appsmith project.\nNow restart the project using ",Object(a.b)("inlineCode",{parentName:"p"},"docker-compose down")," and ",Object(a.b)("inlineCode",{parentName:"p"},"docker-compose up -d")," or using ",Object(a.b)("inlineCode",{parentName:"p"},"chewy-cli")," built in commands for docker operations,\nand you will see all the applications and organizations from the source project. "))}m.isMDXComponent=!0}}]);